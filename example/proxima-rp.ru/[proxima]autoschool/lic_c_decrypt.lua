sx, sy = guiGetScreenSize()
windowsW, windowsH = 200, 230
conusBarrier = false
pedestrian = {
  {
    664,
    -1340.9,
    12.5,
    664,
    -1331.9,
    12.5,
    90
  },
  {
    663,
    -1331.9,
    12.5,
    663,
    -1340.9,
    12.5,
    90
  },
  {
    711.7,
    -1366.5,
    12.5,
    699.7,
    -1366.5,
    12.5,
    0
  },
  {
    699.7,
    -1367.5,
    12.5,
    711.7,
    -1367.5,
    12.5,
    0
  }
}
as_barries = {
  {
    1238,
    709,
    -1332.2,
    13,
    0,
    0,
    0
  },
  {
    1238,
    706,
    -1332.2,
    13,
    0,
    0,
    0
  },
  {
    1238,
    703,
    -1332.2,
    13,
    0,
    0,
    0
  },
  {
    1238,
    709,
    -1340,
    13,
    0,
    0,
    0
  },
  {
    1238,
    706,
    -1340,
    13,
    0,
    0,
    0
  },
  {
    1238,
    703,
    -1340,
    13,
    0,
    0,
    0
  },
  {
    1238,
    675,
    -1332.2,
    13,
    0,
    0,
    0
  },
  {
    1238,
    672,
    -1332.2,
    13,
    0,
    0,
    0
  },
  {
    1238,
    669,
    -1332.2,
    13,
    0,
    0,
    0
  },
  {
    1238,
    666,
    -1332.2,
    13,
    0,
    0,
    0
  },
  {
    1238,
    663,
    -1332.2,
    13,
    0,
    0,
    0
  },
  {
    1238,
    660,
    -1332.2,
    13,
    0,
    0,
    0
  },
  {
    1238,
    657,
    -1332.2,
    13,
    0,
    0,
    0
  },
  {
    1238,
    654,
    -1332.2,
    13,
    0,
    0,
    0
  },
  {
    1238,
    654,
    -1332.2,
    13,
    0,
    0,
    0
  },
  {
    1238,
    654,
    -1334,
    13,
    0,
    0,
    90
  },
  {
    1238,
    654,
    -1337,
    13,
    0,
    0,
    90
  },
  {
    1238,
    654,
    -1340,
    13,
    0,
    0,
    90
  },
  {
    1238,
    652.5,
    -1349,
    13,
    0,
    0,
    90
  },
  {
    1238,
    654,
    -1341.5,
    13,
    0,
    0,
    90
  },
  {
    1238,
    652.5,
    -1341.5,
    13,
    0,
    0,
    90
  },
  {
    1238,
    651,
    -1341.5,
    13,
    0,
    0,
    90
  },
  {
    1238,
    651,
    -1343.2,
    13,
    0,
    0,
    90
  },
  {
    1238,
    651,
    -1345,
    13,
    0,
    0,
    90
  },
  {
    1238,
    651,
    -1347,
    13,
    0,
    0,
    90
  },
  {
    1238,
    651,
    -1349,
    13,
    0,
    0,
    90
  },
  {
    1238,
    654,
    -1352.5,
    13,
    0,
    0,
    90
  },
  {
    1238,
    654,
    -1356,
    13,
    0,
    0,
    90
  },
  {
    1238,
    654,
    -1359,
    13,
    0,
    0,
    90
  },
  {
    1238,
    654,
    -1362,
    13,
    0,
    0,
    90
  },
  {
    1238,
    654,
    -1365,
    13,
    0,
    0,
    90
  },
  {
    1238,
    654,
    -1368,
    13,
    0,
    0,
    90
  },
  {
    1238,
    654,
    -1371,
    13,
    0,
    0,
    90
  },
  {
    1238,
    654,
    -1374,
    13,
    0,
    0,
    90
  },
  {
    1238,
    654,
    -1377,
    13,
    0,
    0,
    90
  },
  {
    1238,
    654,
    -1380,
    13,
    0,
    0,
    90
  },
  {
    1238,
    654,
    -1382.3,
    13,
    0,
    0,
    90
  },
  {
    1238,
    666,
    -1379.255,
    13,
    0,
    0,
    0
  },
  {
    1238,
    674,
    -1379.255,
    13,
    0,
    0,
    0
  },
  {
    1238,
    682,
    -1379.255,
    13,
    0,
    0,
    0
  },
  {
    1238,
    690,
    -1379.255,
    13,
    0,
    0,
    0
  },
  {
    1238,
    698,
    -1379.255,
    13,
    0,
    0,
    0
  },
  {
    1238,
    709,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    706,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    703,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    700,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    697,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    694,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    691,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    688,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    685,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    682,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    679,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    676,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    673,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    670,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    667,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    664,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    661,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    658,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    655,
    -1383.8,
    13,
    0,
    0,
    0
  },
  {
    1238,
    710.8,
    -1382.8,
    13,
    0,
    0,
    90
  },
  {
    1238,
    710.8,
    -1379.8,
    13,
    0,
    0,
    90
  },
  {
    1238,
    710.8,
    -1376.8,
    13,
    0,
    0,
    90
  },
  {
    1238,
    710.8,
    -1373.8,
    13,
    0,
    0,
    90
  },
  {
    1238,
    710.8,
    -1370.8,
    13,
    0,
    0,
    90
  },
  {
    1238,
    710.8,
    -1367.8,
    13,
    0,
    0,
    90
  },
  {
    1238,
    710.8,
    -1364.8,
    13,
    0,
    0,
    90
  },
  {
    1238,
    710.8,
    -1361.8,
    13,
    0,
    0,
    90
  },
  {
    1238,
    710.8,
    -1354.6,
    13,
    0,
    0,
    90
  },
  {
    1238,
    710.8,
    -1351.6,
    13,
    0,
    0,
    90
  },
  {
    1238,
    710.8,
    -1348.6,
    13,
    0,
    0,
    90
  },
  {
    1238,
    709,
    -1347,
    13,
    0,
    0,
    0
  },
  {
    1238,
    706,
    -1347,
    13,
    0,
    0,
    0
  },
  {
    1238,
    703,
    -1347,
    13,
    0,
    0,
    0
  },
  {
    1238,
    700.6,
    -1354.6,
    13,
    0,
    0,
    90
  },
  {
    1238,
    700.6,
    -1351.6,
    13,
    0,
    0,
    90
  },
  {
    1238,
    700.6,
    -1348.6,
    13,
    0,
    0,
    90
  },
  {
    1238,
    700.6,
    -1357.6,
    13,
    0,
    0,
    90
  },
  {
    1238,
    700.6,
    -1360.6,
    13,
    0,
    0,
    90
  },
  {
    1238,
    700.6,
    -1363.6,
    13,
    0,
    0,
    90
  },
  {
    1238,
    700.6,
    -1366.6,
    13,
    0,
    0,
    90
  },
  {
    1238,
    699.5,
    -1374.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    696.5,
    -1374.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    693.5,
    -1374.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    690.5,
    -1374.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    687.5,
    -1374.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    684.5,
    -1374.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    681.5,
    -1374.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    678.5,
    -1374.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    675.5,
    -1374.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    672.5,
    -1374.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    669.5,
    -1374.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    666.5,
    -1374.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    663.5,
    -1374.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    699.5,
    -1368.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    696.5,
    -1368.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    693.5,
    -1368.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    690.5,
    -1368.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    687.5,
    -1368.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    684.5,
    -1368.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    681.5,
    -1368.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    678.5,
    -1368.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    675.5,
    -1368.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    672.5,
    -1368.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    669.5,
    -1368.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    666.5,
    -1368.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    663.5,
    -1368.1,
    13,
    0,
    0,
    0
  },
  {
    1238,
    661.75,
    -1366.6,
    13,
    0,
    0,
    90
  },
  {
    1238,
    661.75,
    -1363.6,
    13,
    0,
    0,
    90
  },
  {
    1238,
    661.75,
    -1360.6,
    13,
    0,
    0,
    90
  },
  {
    1238,
    664.75,
    -1352.3,
    13,
    0,
    0,
    90
  },
  {
    1238,
    664.75,
    -1355,
    13,
    0,
    0,
    90
  },
  {
    1238,
    664.75,
    -1357.7,
    13,
    0,
    0,
    90
  },
  {
    1238,
    664.75,
    -1360.6,
    13,
    0,
    0,
    90
  },
  {
    1238,
    663.25,
    -1352.3,
    13,
    0,
    0,
    90
  },
  {
    1238,
    663.25,
    -1360.6,
    13,
    0,
    0,
    90
  },
  {
    1238,
    661.75,
    -1350.3,
    13,
    0,
    0,
    90
  },
  {
    1238,
    661.75,
    -1347.3,
    13,
    0,
    0,
    90
  },
  {
    1238,
    661.75,
    -1344.3,
    13,
    0,
    0,
    90
  },
  {
    1238,
    661.75,
    -1341.3,
    13,
    0,
    0,
    90
  },
  {
    1238,
    675,
    -1340,
    13,
    0,
    0,
    0
  },
  {
    1238,
    672,
    -1340,
    13,
    0,
    0,
    0
  },
  {
    1238,
    669,
    -1340,
    13,
    0,
    0,
    0
  },
  {
    1238,
    666,
    -1340,
    13,
    0,
    0,
    0
  },
  {
    1238,
    663,
    -1340,
    13,
    0,
    0,
    0
  },
  {
    1238,
    712.5,
    -1365.65,
    13,
    0,
    0,
    0
  },
  {
    1238,
    715.5,
    -1365.65,
    13,
    0,
    0,
    0
  },
  {
    1238,
    718.5,
    -1365.65,
    13,
    0,
    0,
    0
  },
  {
    1238,
    712.5,
    -1353.65,
    13,
    0,
    0,
    0
  },
  {
    1238,
    715.5,
    -1353.65,
    13,
    0,
    0,
    0
  },
  {
    1238,
    718.5,
    -1353.65,
    13,
    0,
    0,
    0
  },
  {
    1238,
    719.6,
    -1364,
    13,
    0,
    0,
    90
  },
  {
    1238,
    719.6,
    -1361.2,
    13,
    0,
    0,
    90
  },
  {
    1238,
    719.6,
    -1358.4,
    13,
    0,
    0,
    90
  },
  {
    1238,
    719.6,
    -1355.6000000000001,
    13,
    0,
    0,
    90
  },
  {
    1238,
    714.2,
    -1341.37,
    13,
    0,
    0,
    90
  },
  {
    1238,
    718.2,
    -1342.73,
    13,
    0,
    0,
    90
  },
  {
    1238,
    722.2,
    -1344.4,
    13,
    0,
    0,
    90
  },
  {
    1238,
    714.2,
    -1333.37,
    13,
    0,
    0,
    90
  },
  {
    1238,
    718.2,
    -1334.73,
    13,
    0,
    0,
    90
  },
  {
    1238,
    722.2,
    -1336.4,
    13,
    0,
    0,
    90
  }
}
asObjects = {}
pedObjects = {}
function create_as_barries()
  removeAsObj()
  removePedObj()
  for _FORV_3_, _FORV_4_ in ipairs(as_barries) do
    object = createObject(_FORV_4_[1], _FORV_4_[2], _FORV_4_[3], _FORV_4_[4], _FORV_4_[5], _FORV_4_[6], _FORV_4_[7])
    setElementData(object, "barrierAs", true)
    table.insert(asObjects, object)
  end
  for _FORV_3_, _FORV_4_ in ipairs(pedestrian) do
    ped = createObject(1583, _FORV_4_[1], _FORV_4_[2], _FORV_4_[3], 0, 0, _FORV_4_[7])
    setElementFrozen(ped, true)
    setElementData(ped, "newCoord", {
      _FORV_4_[4],
      _FORV_4_[5],
      _FORV_4_[6]
    })
    setElementData(ped, "pedestrianAs", true)
    table.insert(pedObjects, ped)
  end
  for _FORV_4_ = 1, #getElementsByType("player", root, true) do
    if getElementsByType("player", root, true)[_FORV_4_] ~= localPlayer then
      if asObjects[1] then
        for _FORV_9_ = 1, #asObjects do
          setElementCollidableWith(asObjects[_FORV_9_], getElementsByType("player", root, true)[_FORV_4_], false)
        end
      end
      if _FOR_[1] then
        for _FORV_9_ = 1, #pedObjects do
          setElementCollidableWith(pedObjects[_FORV_9_], getElementsByType("player", root, true)[_FORV_4_], false)
        end
      end
    end
  end
  for _FORV_6_ = 1, #getElementsByType("vehicle", root, true) do
    if getElementsByType("vehicle", root, true)[_FORV_6_] ~= getPedOccupiedVehicle(localPlayer) then
      if asObjects[1] then
        for _FORV_11_ = 1, #asObjects do
          setElementCollidableWith(asObjects[_FORV_11_], getElementsByType("vehicle", root, true)[_FORV_6_], false)
        end
      end
      if _FOR_[1] then
        for _FORV_11_ = 1, #pedObjects do
          setElementCollidableWith(pedObjects[_FORV_11_], getElementsByType("vehicle", root, true)[_FORV_6_], false)
        end
      end
    end
  end
  movePedTimer = setTimer(startPedMove, 8000, 0)
end
addEvent("create_as_barriesEvent", true)
addEventHandler("create_as_barriesEvent", getRootElement(), create_as_barries)
function removeAsObj()
  if #asObjects < 1 then
    return
  end
  for _FORV_3_ = 1, #asObjects do
    if isElement(asObjects[_FORV_3_]) then
      destroyElement(asObjects[_FORV_3_])
    end
  end
  asObjects = _FOR_
end
addEvent("removeAsObjEvent", true)
addEventHandler("removeAsObjEvent", getRootElement(), removeAsObj)
function removePedObj()
  if isTimer(movePedTimer) then
    killTimer(movePedTimer)
  end
  if #pedObjects < 1 then
    return
  end
  for _FORV_3_ = 1, #pedObjects do
    if isElement(pedObjects[_FORV_3_]) then
      destroyElement(pedObjects[_FORV_3_])
    end
  end
  pedObjects = _FOR_
end
addEvent("removePedObjEvent", true)
addEventHandler("removePedObjEvent", getRootElement(), removePedObj)
function hitBarrier(_ARG_0_, _ARG_1_)
  if getElementData(source, "barrierAs") then
    if _ARG_0_ > 100 and _ARG_1_ == getPedOccupiedVehicle(localPlayer) and conusBarrier == false then
      triggerServerEvent("hitBarrierEvent", localPlayer)
      conusBarrier = true
      setTimer(function()
        conusBarrier = false
      end, 1000, 1)
    end
  elseif getElementData(source, "pedestrianAs") and _ARG_1_ == getPedOccupiedVehicle(localPlayer) then
    triggerServerEvent("hitAsPedestrianEvent", localPlayer)
  end
end
addEventHandler("onClientObjectDamage", root, hitBarrier)
addEventHandler("onClientObjectBreak", root, function()
  if getElementData(source, "barrierAs") then
    cancelEvent()
  end
end)
function vehicleMarkerLicenseHit()
  if _UPVALUE0_:dxCheckWindows() or _UPVALUE0_:dxCheckPlates() then
    return
  end
  vehicleLicenseBuy()
  _UPVALUE0_:dxShowCursor(true)
end
addEvent("vehicleMarkerLicenseHitEvent", true)
addEventHandler("vehicleMarkerLicenseHitEvent", getRootElement(), vehicleMarkerLicenseHit)
windowsWVeh, windowsHVeh = 250, 400
function vehicleLicenseBuy()
  vehicleLicenseWindow = _UPVALUE0_:dxCreateWindow(sx / 2 - windowsWVeh / 2, sy / 2 - windowsHVeh / 2, windowsWVeh, windowsHVeh, "", tocolor(255, 255, 255, 255))
  _UPVALUE0_:dxCreateStaticImage(0, 0, windowsWVeh, 100, "image/img.png", rotation, vehicleLicenseWindow, color)
  if getElementData(localPlayer, "data_lvl") == 1 then
    stepOneButton = _UPVALUE0_:dxCreateButton(20, 110, windowsWVeh - 40, 40, "Начать: Бесплатно", vehicleLicenseWindow, color, "default-bold")
  else
    stepOneButton = _UPVALUE0_:dxCreateButton(20, 110, windowsWVeh - 40, 40, "Начать: 500$", vehicleLicenseWindow, color, "default-bold")
  end
  stepTwoButton = _UPVALUE0_:dxCreateButton(20, 160, windowsWVeh - 40, 40, "Получить права", vehicleLicenseWindow, color, "default-bold")
  aeroButton = _UPVALUE0_:dxCreateButton(20, 210, windowsWVeh - 40, 40, "Воздушный транспорт: 50000$", vehicleLicenseWindow, color, "default-bold")
  boatButton = _UPVALUE0_:dxCreateButton(20, 260, windowsWVeh - 40, 40, "Водный транспорт 50000$", vehicleLicenseWindow, color, "default-bold")
  exitVehicleButton = _UPVALUE0_:dxCreateButton(20, windowsHVeh - 30, windowsWVeh - 40, 40, "Выход", vehicleLicenseWindow, color, "default-bold")
  setElementData(exitVehicleButton, "type", "escape")
  setElementData(vehicleLicenseWindow, "ColWindow", true)
end
function onPlayerButton(_ARG_0_, _ARG_1_)
  if _ARG_0_ == "left" and _ARG_1_ == "up" then
    if source == aeroButton then
      triggerServerEvent("givePlayerLicenseEvent", localPlayer, 3)
    elseif source == boatButton then
      triggerServerEvent("givePlayerLicenseEvent", localPlayer, 2)
    elseif source == stepOneButton then
      triggerServerEvent("startStepOneEvent", localPlayer)
      _UPVALUE0_:dxDestroyElement(vehicleLicenseWindow)
      _UPVALUE0_:dxShowCursor(false)
    elseif source == stepTwoButton then
      triggerServerEvent("givePlayerLicenseEvent", localPlayer, 1)
      _UPVALUE0_:dxDestroyElement(vehicleLicenseWindow)
      _UPVALUE0_:dxShowCursor(false)
    elseif source == exitVehicleButton then
      _UPVALUE0_:dxDestroyElement(vehicleLicenseWindow)
      _UPVALUE0_:dxShowCursor(false)
    end
  end
end
addEventHandler("onClientDXClick", root, onPlayerButton)
function startPedMove()
  for _FORV_3_ = 1, #pedObjects do
    if isElement(pedObjects[_FORV_3_]) then
      setElementData(pedObjects[_FORV_3_], "newCoord", {
        getElementPosition(pedObjects[_FORV_3_])
      })
      moveObject(pedObjects[_FORV_3_], 5000, getElementData(pedObjects[_FORV_3_], "newCoord")[1], getElementData(pedObjects[_FORV_3_], "newCoord")[2], getElementData(pedObjects[_FORV_3_], "newCoord")[3])
    end
  end
end
